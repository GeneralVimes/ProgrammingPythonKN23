import math
N = 31
# 31 = 2*11+9
# 31 = 4*7+3
# 961%7
# 961 = 137*7+2


# Знайдіть кількість натуральних чисел між числами 5 та 143 (не включаючи границі), які не діляться на 2 та діляться на 4
X = 0
Y = 0
for i in range(6, 143):
	if i%2!=0 and i%4==0:
		X+=1
	else:
		Y+=i
print("X=",X)#кількість чисел що підходять
print("Y=",Y)#сума чисел що не підходять

# 31 = 3*9+4
# Крок - збільшення числа на його суму цифр (або на 1, якщо сума цифр 0)
def sum_digits(n):
	res=0
	while n>0:
		d = n%10
		res+=d
		n = n//10
	return res

x0 = X#початкове число
#кінцеве число
x1 = 32*(Y+10*X)

K=0
while x0<=x1:
	s = sum_digits(x0)
	if s==0:
		s=1
	x0+=s#збільшуємо число або на суму цифр або на 1(якщо сума його цифр 0)
	K+=1;

print("K=",K)#кількість кроків

n0 = N*(N+X)*(N+Y)*(N+K);
# треба знайти перше просте число більше за n0


def is_prime(n):
	if n==1:#перевіряємо виняток
		return False
	maxD = math.floor(math.sqrt(n))#максимальний дільник, до якого треба перевіряти
	# пробігаємося по простих числах, раніше знайдених
	for d in range(2, maxD+1):
		if n%d==0:#якщо число ділиться на якесь з простих, то повертаємо, що воно не просте
			return False
	return True

P = n0+1
while True:
	if is_prime(P):
		break
	P+=1;
print("P=",P)#просте число

ryadok = str(N)+str(X)+str(Y)+str(K)+str(P)

# Беручи із цього рядку цифри по 3
# створіть масив із чисел
ar=[]
for i in range(0, len(ryadok),3):
	ar.append(int(ryadok[i:i+3]))

print(ar)

L = len(ar)
# знайти в ньому 4 елементи підряд так, щоб їх сума була максимальної
# Знайдемо число S

# Зашифрувати рядок шифром Цезаря зі здвигом на 2